anyDuplicated.data.frame(sales_train)
anyDuplicated(sales_train)
duplicated.data.frame(sales_train)
which(duplicated.data.frame(sales_train) == T)
sales_train[which(duplicated.data.frame(sales_train) == T)]
sales_train[,which(duplicated.data.frame(sales_train) == T)]
sales_train[which(duplicated.data.frame(sales_train) == T),]
sales_train %>% dplyr::filter(date == "2014-03-23", date_block_num == 14, Item.Shop == 3423.21, item_price == 999, item_cnt_day == 1 )
sales_train %>% dplyr::filter(date == as.Date("2014-03-23"), date_block_num == 14, Item.Shop == 3423.21, item_price == 999, item_cnt_day == 1 )
sales_train %>% dplyr::filter(date == as.Date("2014-07-12"), date_block_num == 18, Item.Shop == 3423.25, item_price == 999, item_cnt_day == 1 )
knitr::opts_chunk$set(echo = TRUE)
library(magrittr)
library(dplyr)
library(forecast)
library(zoo)
# This line of code crashes R ... to much data??... Commenting them out.
sales_train.zoo <- read.zoo(sales_train[1:2000,],
index.column = 2,
split = 1)
# Training data set
sales_train <- read.csv("./Midterm/sales_train_v2.csv", header = T, stringsAsFactors = F)
sales_train %<>% dplyr::mutate(date = lubridate::parse_date_time(date,orders = "%d.%m.%Y"),
Item.Shop = item_id + shop_id/100) %>%
dplyr::arrange(Item.Shop,date) %>%
#dplyr::slice(.,which(duplicated.data.frame(.))*-1) %>%
dplyr::group_by(Item.Shop,date_block_num) %>%
dplyr::summarise(MontlyCts = sum(item_cnt_day)) %>%
dplyr::arrange(Item.Shop,date_block_num)
# This line of code crashes R ... to much data??... Commenting them out.
sales_train.zoo <- read.zoo(sales_train[1:2000,],
index.column = 2,
split = 1)
sales_train.zoo
# Training data set
sales_train <- read.csv("./Midterm/sales_train_v2.csv", header = T, stringsAsFactors = F)
sales_train %<>% dplyr::mutate(date = lubridate::parse_date_time(date,orders = "%d.%m.%Y")) %>%
# dplyr::arrange(Item.Shop,date) %>%
#dplyr::slice(.,which(duplicated.data.frame(.))*-1) %>%
dplyr::group_by(item_id,shop_id,date_block_num) %>%
dplyr::summarise(MontlyCts = sum(item_cnt_day)) %>%
dplyr::arrange(item_id,shop_id,date_block_num)
sales_train
# Item categories
ItemCategories <- read.csv("./Midterm/item_categories.csv")
# Items
Items <- read.csv('./Midterm/items.csv')
sales_train <- dplyr::left_join(sales_train,Items[,2:3])
# This line of code crashes R ... to much data??... Commenting them out.
sales_train.zoo <- read.zoo(sales_train[1:2000,],
index.column = 3,
split = 5)
sales_train_test<- dplyr::left_join(sales_train,Items[,2:3]) %>%
dplyr::slice(item_category_id)
knitr::opts_chunk$set(echo = TRUE)
library(magrittr)
library(dplyr)
library(forecast)
library(zoo)
# Training data set
sales_train <- read.csv("./Midterm/sales_train_v2.csv", header = T, stringsAsFactors = F)
# Item categories
ItemCategories <- read.csv("./Midterm/item_categories.csv")
# Items
Items <- read.csv('./Midterm/items.csv')
# Summarized data
sales_train %<>% dplyr::mutate(date = lubridate::parse_date_time(date,orders = "%d.%m.%Y")) %>%
# dplyr::arrange(Item.Shop,date) %>%
#dplyr::slice(.,which(duplicated.data.frame(.))*-1) %>%
dplyr::group_by(item_id,shop_id,date_block_num) %>%
dplyr::summarise(MontlyCts = sum(item_cnt_day)) %>%
dplyr::arrange(item_id,shop_id,date_block_num) %>%
dplyr::mutate(Item.Shop = item_id + shop_id / 100) %>%
dplyr::left_join(x = ., y = Items[,2:3])
df <- data.frame(date_block_num = seq(min(sales_train$date_block_num),max(sales_train$date_block_num)))
df %<>% merge.data.frame(.,sales_train)
df <- data.frame(date_block_num = rep(seq(min(sales_train$date_block_num),max(sales_train$date_block_num)),n_distinct(sales_train$Item.Shop)),
Item.Shop = rep(unique(sales_train$Item.Shop,each = max(sales_train$date_block_num) - min(sales_train$date_block_num) + 1))
)
df
x = c(1,2,3)
rep(x,each = 3)
df <- data.frame(date_block_num = rep(seq(min(sales_train$date_block_num),max(sales_train$date_block_num)),n_distinct(sales_train$Item.Shop)),
Item.Shop = rep(unique(sales_train$Item.Shop),each = max(sales_train$date_block_num) - min(sales_train$date_block_num) + 1)
)
df
df %<>% merge.data.frame(.,sales_train)
head(df)
df <- data.frame(date_block_num = rep(seq(min(sales_train$date_block_num),max(sales_train$date_block_num)),n_distinct(sales_train$Item.Shop)),
Item.Shop = rep(unique(sales_train$Item.Shop),each = max(sales_train$date_block_num) - min(sales_train$date_block_num) + 1)
)
df
df %<>% merge.data.frame(.,sales_train,all.x = T)
head(df)
df %>% dplyr::filter(Item.Shop = 0.54)
df %>% dplyr::filter(Item.Shop == 0.54)
df %<>% merge.data.frame(.,sales_train,all.x = T) %>%
dplyr::arrange(Item.Shop,date_block_num)
head(df)
View(ItemCategories)
View(Items)
df <- data.frame(date_block_num = rep(seq(min(sales_train$date_block_num),max(sales_train$date_block_num)),n_distinct(sales_train$Item.Shop)),
Item.Shop = rep(unique(sales_train$Item.Shop),each = max(sales_train$date_block_num) - min(sales_train$date_block_num) + 1)
)
df
tidyr::separate(df,2)
tidyr::separate(df,2,c("item_id","shop_id"))
df$Item.Shop[3469]
df <- data.frame(date_block_num = rep(seq(min(sales_train$date_block_num),max(sales_train$date_block_num)),n_distinct(sales_train$Item.Shop)),
Item.Shop = rep(unique(sales_train$Item.Shop),each = max(sales_train$date_block_num) - min(sales_train$date_block_num) + 1)
) %>%
tidyr::separate(.,.$Item.Shop, c("item_id","shop_id"))
df <- data.frame(date_block_num = rep(seq(min(sales_train$date_block_num),max(sales_train$date_block_num)),n_distinct(sales_train$Item.Shop)),
Item.Shop = rep(unique(sales_train$Item.Shop),each = max(sales_train$date_block_num) - min(sales_train$date_block_num) + 1)
) %>%
tidyr::separate(.,2, c("item_id","shop_id"))
df[3469,]
df <- data.frame(date_block_num = rep(seq(min(sales_train$date_block_num),max(sales_train$date_block_num)),n_distinct(sales_train$Item.Shop)),
Item.Shop = rep(unique(sales_train$Item.Shop),each = max(sales_train$date_block_num) - min(sales_train$date_block_num) + 1)
) %>%
tidyr::separate(.,2, c("item_id","shop_id"))%>%
dplyr::mutate(if_else(is.na(shop_id),0,shop_id))
df <- data.frame(date_block_num = rep(seq(min(sales_train$date_block_num),max(sales_train$date_block_num)),n_distinct(sales_train$Item.Shop)),
Item.Shop = rep(unique(sales_train$Item.Shop),each = max(sales_train$date_block_num) - min(sales_train$date_block_num) + 1)
) %>%
tidyr::separate(.,2, c("item_id","shop_id"))%>%
dplyr::mutate(shop_id = if_else(is.na(shop_id),0,shop_id))
df <- data.frame(date_block_num = rep(seq(min(sales_train$date_block_num),max(sales_train$date_block_num)),n_distinct(sales_train$Item.Shop)),
Item.Shop = rep(unique(sales_train$Item.Shop),each = max(sales_train$date_block_num) - min(sales_train$date_block_num) + 1)
) %>%
tidyr::separate(.,2, c("item_id","shop_id"))%>%
dplyr::mutate(shop_id = ifelse(is.na(shop_id),0,shop_id))
df
df %<>% merge.data.frame(.,sales_train,all.x = T) %>%
dplyr::arrange(item_id,shop_id,date_block_num)
head(df)
head(df)
df <- data.frame(date_block_num = rep(seq(min(sales_train$date_block_num),max(sales_train$date_block_num)),n_distinct(sales_train$Item.Shop)),
Item.Shop = rep(unique(sales_train$Item.Shop),each = max(sales_train$date_block_num) - min(sales_train$date_block_num) + 1)
) %>%
tidyr::separate(.,2, c("item_id","shop_id"))%>%
dplyr::mutate(shop_id = ifelse(is.na(shop_id),0,shop_id))
df2 <- df %>% dplyr::left_join(.,sales_train)
str(df)
df <- data.frame(date_block_num = rep(seq(min(sales_train$date_block_num),max(sales_train$date_block_num)),n_distinct(sales_train$Item.Shop)),
Item.Shop = rep(unique(sales_train$Item.Shop),each = max(sales_train$date_block_num) - min(sales_train$date_block_num) + 1)
) %>%
tidyr::separate(.,2, c("item_id","shop_id"))%>%
dplyr::mutate(shop_id = ifelse(is.na(shop_id),0,shop_id)) %>%
dplyr::mutate(item_id = as.numeric(item_id),shop_id = as.numeric(shop_id))
df2 <- df %>% dplyr::left_join(.,sales_train)
df2 <- df %>% dplyr::left_join(.,sales_train[1:4])
df2
df2 <- df %>%
dplyr::left_join(.,sales_train[1:4]) %>%
dplyr::left_join(.,Items[2:3])
df2
df2  %>% dplyr::group_by(date_block_num,item_category_id) %>%
dplyr::summarise(SaleCounts = sum(MonthlyCts,na.rm = T))
df2  %>% dplyr::group_by(date_block_num,item_category_id) %>%
dplyr::summarise(SaleCounts = sum(MontlyCts,na.rm = T))
df2  %>% dplyr::group_by(date_block_num,item_category_id) %>%
dplyr::summarise(SaleCounts = sum(MontlyCts,na.rm = T)) %>%
tidyr::spread(item_category_id, SaleCounts)
MonthlySales <- df %>%
dplyr::left_join(.,sales_train[1:4]) %>%
dplyr::left_join(.,Items[2:3])
ItemCatMonthlySale  %>% dplyr::group_by(date_block_num,item_category_id) %>%
dplyr::summarise(SaleCounts = sum(MontlyCts,na.rm = T)) %>%
tidyr::spread(item_category_id, SaleCounts)
ItemCatMonthlySale  <- MonthlySales %>% dplyr::group_by(date_block_num,item_category_id) %>%
dplyr::summarise(SaleCounts = sum(MontlyCts,na.rm = T)) %>%
tidyr::spread(item_category_id, SaleCounts)
corrplot::corrplot(cor(ItemCatMonthlySale[-1]))
caret::nearZeroVar(ItemCatMonthlySale)
corrplot::corrplot(cor(ItemCatMonthlySale[c(1,ZeroVars)*-1]))
ZeroVars <- caret::nearZeroVar(ItemCatMonthlySale)
corrplot::corrplot(cor(ItemCatMonthlySale[c(1,ZeroVars)*-1]))
corrplot::corrplot(cor(ItemCatMonthlySale[c(1,ZeroVars)*-1]),order = "hclust")
corrplot::corrplot(cor(ItemCatMonthlySale[c(1,ZeroVars)*-1]),order = "hclust",tl.cex = 0.6)
caret::findCorrelation(cor(ItemCatMonthlySale[c(1,ZeroVars)*-1]))
cormat <- cor(ItemCatMonthlySale[c(1,ZeroVars)*-1])
cormat[43]
cormat[43,]
cormat(39:42)
cormat[39:42]
cormat[39:42,39:42]
head(cormat)
cormat[1,1]
cormat[1:1,1:1]
cormat[1:2,1:2]
cormat[39:42,39:42]
library(ggplot2)
MonthlySales %>%
dplyr::fiter(item_category_id %in% c(41,42)) %>%
ggplot(.,mapping = aes(x = date_block_num, y = MontlyCts, color = item_category_id)) + geom_line()
MonthlySales %>%
dplyr::filter(item_category_id %in% c(41,42)) %>%
ggplot(.,mapping = aes(x = date_block_num, y = MontlyCts, color = item_category_id)) + geom_line()
MonthlySales %>%
dplyr::filter(item_category_id %in% c(41,42)) %>%
ggplot(.,mapping = aes(x = date_block_num, y = MontlyCts, color = item_category_id)) + geom_point()
MonthlySales %>%
dplyr::filter(item_category_id %in% c(41,42)) %>%
ggplot(.,mapping = aes(x = date_block_num, y = MontlyCts, group = item_category_id)) + geom_line()
MonthlySales %>%
dplyr::filter(item_category_id == 41) %>%
ggplot(.,mapping = aes(x = date_block_num, y = MontlyCts, group = item_category_id)) + geom_line()
MonthlySales %>% dplyr::filter(item_category_id == 41) %>% n_distinct(item_id)
MonthlySales %>% dplyr::filter(item_category_id == 41) %>% dplyr::summarise (cts = n_distinct(item_id))
MonthlySales %>% dplyr::filter(item_category_id == 42) %>% dplyr::summarise (cts = n_distinct(item_id))
MonthlySales %>%
dplyr::filter(item_category_id == 42) %>%
ggplot(.,mapping = aes(x = date_block_num, y = MontlyCts, group = item_category_id)) + geom_line()
MonthlySales %>%
dplyr::filter(item_category_id == 42) %>%
ggplot(.,mapping = aes(x = date_block_num, y = MontlyCts, group = item_category_id)) + geom_line() + facet_wrap(item_id)
MonthlySales %>%
dplyr::filter(item_category_id == 42) %>%
ggplot(.,mapping = aes(x = date_block_num, y = MontlyCts, group = item_category_id)) + geom_line() + facet_wrap(item_id)
MonthlySales %>%
dplyr::filter(item_category_id == 42) %>%
ggplot(.,mapping = aes(x = date_block_num, y = MontlyCts, group = item_category_id)) + geom_line() + facet_wrap(~item_id)
onthlySales %>%
dplyr::filter(item_category_id == 42)
MonthlySales %>%
dplyr::filter(item_category_id == 42)
MonthlySales %>%
dplyr::filter(item_category_id == 42) %>%
dplyr::mutate(MontlyCts = ifelse(is.na(MontlyCts), 0, MontlyCts)) %>%
ggplot(.,mapping = aes(x = date_block_num, y = MontlyCts, group = item_category_id)) + geom_line() + facet_wrap(~item_id)
MonthlySales %>%
dplyr::filter(item_category_id == 42) %>%
dplyr::mutate(MontlyCts = ifelse(is.na(MontlyCts), 0, MontlyCts)) %>%
dplyr::mutate(MontlyCts = as.ts(MontlyCts)) %>%
autoplot(MontlyCts) + facet_wrap(~item_id)
MonthlySales %>%
dplyr::filter(item_category_id == 42) %>%
dplyr::mutate(MontlyCts = ifelse(is.na(MontlyCts), 0, MontlyCts)) %>%
dplyr::mutate(MontlyCts = as.ts(MontlyCts)) %>%
autoplot(~MontlyCts) + facet_wrap(~item_id)
MonthlySales %>%
dplyr::filter(item_category_id == 42) %>%
dplyr::mutate(MontlyCts = ifelse(is.na(MontlyCts), 0, MontlyCts)) %>%
dplyr::mutate(MontlyCts = as.ts(MontlyCts)) %>%
autoplot(.$MontlyCts) + facet_wrap(~item_id)
MonthlySales %>%
dplyr::filter(item_category_id == 42) %>%
dplyr::mutate(MontlyCts = ifelse(is.na(MontlyCts), 0, MontlyCts)) %>%
dplyr::mutate(MontlyCts = as.ts(MontlyCts)) %>%
ggplot(.,mapping = aes(x = date_block_num, y = MontlyCts, group = item_category_id)) + geom_line() + facet_wrap(~item_id)
corrplot::corrplot(cormat,order = "hclust",tl.cex = 0.6)
MonthlySales %>%
dplyr::filter(item_category_id == 10) %>%
dplyr::mutate(MontlyCts = ifelse(is.na(MontlyCts), 0, MontlyCts)) %>%
dplyr::mutate(MontlyCts = as.ts(MontlyCts)) %>%
ggplot(.,mapping = aes(x = date_block_num, y = MontlyCts, group = item_category_id)) + geom_line() + facet_wrap(~item_id)
MonthlySales %>%
dplyr::filter(item_category_id == 6) %>%
dplyr::mutate(MontlyCts = ifelse(is.na(MontlyCts), 0, MontlyCts)) %>%
dplyr::mutate(MontlyCts = as.ts(MontlyCts)) %>%
ggplot(.,mapping = aes(x = date_block_num, y = MontlyCts, group = item_category_id)) + geom_line() + facet_wrap(~item_id)
MonthlySales %>%
dplyr::filter(item_category_id == 6) %>%
dplyr::filter(item_id == 7893) %>%
dplyr::mutate(MontlyCts = ifelse(is.na(MontlyCts), 0, MontlyCts)) %>%
dplyr::mutate(MontlyCts = as.ts(MontlyCts)) %>%
ggplot(.,mapping = aes(x = date_block_num, y = MontlyCts, group = item_category_id)) + geom_line() + facet_wrap(~item_id)
MonthlySales %>%
dplyr::filter(item_category_id == 6) %>%
dplyr::filter(item_id == 7893) %>%
dplyr::mutate(MontlyCts = ifelse(is.na(MontlyCts), 0, MontlyCts)) %>%
dplyr::mutate(MontlyCts = as.ts(MontlyCts)) %>%
# ggplot(.,mapping = aes(x = date_block_num, y = MontlyCts, group = item_category_id)) + geom_line() + facet_wrap(~item_id)
autoplot(.$MontlyCts)
MonthlySales %>%
dplyr::filter(item_category_id == 6) %>%
dplyr::filter(item_id == 7893) %>%
dplyr::mutate(MontlyCts = ifelse(is.na(MontlyCts), 0, MontlyCts)) %>%
dplyr::mutate(MontlyCts = as.ts(MontlyCts)) %>%
# ggplot(.,mapping = aes(x = date_block_num, y = MontlyCts, group = item_category_id)) + geom_line() + facet_wrap(~item_id)
lattice::xyplot.ts(data = .,~MontlyCts)
test <- MonthlySales %>%
dplyr::filter(item_category_id == 6) %>%
dplyr::filter(item_id == 7893) %>%
dplyr::mutate(MontlyCts = ifelse(is.na(MontlyCts), 0, MontlyCts)) %>%
dplyr::mutate(MontlyCts = as.ts(MontlyCts))
max(MonthlySales$date_block_num)
test <- MonthlySales %>%
dplyr::filter(item_category_id == 6) %>%
dplyr::filter(item_id == 7893) %>%
dplyr::mutate(MontlyCts = ifelse(is.na(MontlyCts), 0, MontlyCts)) %>%
dplyr::select(MontlyCts) %>%
dplyr::mutate(MontlyCts = as.ts(MontlyCts, start = 0, end = 33, frequency=1 ))
autoplot(test$MontlyCts)
plot(test[1])
corrplot::corrplot(cormat,order = "hclust",tl.cex = 0.6)
corrplot::corrplot(cormat,order = "hclust",tl.cex = 0.6)
ItemCatMonthlySale
ItemCatMonthlySale  <- MonthlySales %>% dplyr::group_by(date_block_num,item_category_id) %>%
dplyr::summarise(SaleCounts = sum(MonthlyCts,na.rm = T)) %>%
tidyr::spread(item_category_id, SaleCounts)
# Training data set
sales_train <- read.csv("./Midterm/sales_train_v2.csv", header = T, stringsAsFactors = F)
# Item categories
ItemCategories <- read.csv("./Midterm/item_categories.csv")
# Items
Items <- read.csv('./Midterm/items.csv')
# Summarized data
sales_train %<>% dplyr::mutate(date = lubridate::parse_date_time(date,orders = "%d.%m.%Y")) %>%
# dplyr::arrange(Item.Shop,date) %>%
#dplyr::slice(.,which(duplicated.data.frame(.))*-1) %>%
dplyr::group_by(item_id,shop_id,date_block_num) %>%
dplyr::summarise(MonthlyCts = sum(item_cnt_day)) %>%
dplyr::arrange(item_id,shop_id,date_block_num) %>%
dplyr::mutate(Item.Shop = item_id + shop_id / 100) %>%
dplyr::left_join(x = ., y = Items[,2:3])
df <- data.frame(date_block_num = rep(seq(min(sales_train$date_block_num),max(sales_train$date_block_num)),n_distinct(sales_train$Item.Shop)),
Item.Shop = rep(unique(sales_train$Item.Shop),each = max(sales_train$date_block_num) - min(sales_train$date_block_num) + 1)
) %>%
tidyr::separate(.,2, c("item_id","shop_id"))%>%
dplyr::mutate(shop_id = ifelse(is.na(shop_id),0,shop_id)) %>%
dplyr::mutate(item_id = as.numeric(item_id),shop_id = as.numeric(shop_id))
MonthlySales <- df %>%
dplyr::left_join(.,sales_train[1:4]) %>%
dplyr::left_join(.,Items[2:3])
ItemCatMonthlySale  <- MonthlySales %>% dplyr::group_by(date_block_num,item_category_id) %>%
dplyr::summarise(SaleCounts = sum(MonthlyCts,na.rm = T)) %>%
tidyr::spread(item_category_id, SaleCounts)
ZeroVars <- caret::nearZeroVar(ItemCatMonthlySale)
cormat <- cor(ItemCatMonthlySale[c(1,ZeroVars)*-1])
corrplot::corrplot(cormat,order = "hclust",tl.cex = 0.6)
test <- MonthlySales %>%
dplyr::filter(item_category_id == 6) %>%
dplyr::filter(item_id == 7893) %>%
dplyr::mutate(MontlyCts = ifelse(is.na(MontlyCts), 0, MontlyCts)) %>%
dplyr::select(MontlyCts) %>%
dplyr::mutate(MontlyCts = as.ts(MontlyCts, start = 0, end = 33, frequency=1 ))
MonthlySales
ItemCatMonthlySale
ZeroVars
# Summay by Item Category
ItemCatMonthlySale  <- MonthlySales %>% dplyr::group_by(date_block_num,item_category_id) %>%
dplyr::summarise(SaleCounts = sum(MonthlyCts,na.rm = T)) %>%
tidyr::spread(item_category_id, SaleCounts) %>%
as_tibble(.)
ItemCatMonthlySale
ZeroVars <- caret::nearZeroVar(ItemCatMonthlySale)
ZeroVars
ItemCatMonthlySale
corrplot::corrplot(cormat,order = "hclust",tl.cex = 0.6)
cormat[`11`,`19`]
head(cormat)
cormat[12,20]
cormat[11,19]
cormat[0,1]
cormat[1,1]
cormat[1,2]
cormat[20,12]
plot(ItemCatMonthlySale$11)
plot(ItemCatMonthlySale$`11`)
plot(ItemCatMonthlySale$`11`,type = "l")
lines(ItemCatMonthlySale$`19`, col = "blue")
plot(ItemCatMonthlySale$`11`,type = "l")
lines(ItemCatMonthlySale$`19`, col = "blue")
plot(ItemCatMonthlySale$`11`,type = "l")
lines(ItemCatMonthlySale$`19`, col = "blue")
plot(ItemCatMonthlySale$`11`,type = "l")
lines(ItemCatMonthlySale$`19`, col = "blue")
plot(ItemCatMonthlySale$date_block_num,ItemCatMonthlySale$`11`, type = "b")
lines(ItemCatMonthlySale$date_block_num, ItemCatMonthlySale$`19`, type = "b", col = "red")
ItemCatMonthlySale$`19`
plot(ItemCatMonthlySale$date_block_num,ItemCatMonthlySale$`11`, type = "b",ylim = c(0,11000))
lines(ItemCatMonthlySale$date_block_num, ItemCatMonthlySale$`19`, type = "b", col = "red")
plot(ItemCatMonthlySale$date_block_num,ItemCatMonthlySale$`11`)
par(new = T)
plot(ItemCatMonthlySale$date_block_num,ItemCatMonthlySale$`19`, col = "red")
axis(side = 4, at = pretty(range(ItemCatMonthlySale$`19`)))
plot(ItemCatMonthlySale$date_block_num,ItemCatMonthlySale$`11`, type = "l")
par(new = T)
plot(ItemCatMonthlySale$date_block_num,ItemCatMonthlySale$`19`, col = "red", type = "l")
axis(side = 4, at = pretty(range(ItemCatMonthlySale$`19`)))
plot(ItemCatMonthlySale$date_block_num,ItemCatMonthlySale$`11`, type = "l")
par(new = T)
plot(ItemCatMonthlySale$date_block_num,ItemCatMonthlySale$`19`, col = "red", type = "l")
axis(side = 4, at = pretty(range(ItemCatMonthlySale$`19`)))
grid(nx = 33)
plot(ItemCatMonthlySale$date_block_num,ItemCatMonthlySale$`11`, type = "l")
par(new = T)
plot(ItemCatMonthlySale$date_block_num,ItemCatMonthlySale$`19`, col = "red", type = "l")
axis(side = 4, at = pretty(range(ItemCatMonthlySale$`19`)))
grid(ny = 33)
grid(nx = 33, ny = 10)
plot(ItemCatMonthlySale$date_block_num,ItemCatMonthlySale$`11`, type = "l")
par(new = T)
plot(ItemCatMonthlySale$date_block_num,ItemCatMonthlySale$`19`, col = "red", type = "l")
axis(side = 4, at = pretty(range(ItemCatMonthlySale$`19`)))
grid(nx = 33, ny = 10)
plot(ItemCatMonthlySale$date_block_num,ItemCatMonthlySale$`12`, type = "l")
par(new = T)
plot(ItemCatMonthlySale$date_block_num,ItemCatMonthlySale$`20`, col = "red", type = "l")
axis(side = 4, at = pretty(range(ItemCatMonthlySale$`20`)))
grid(nx = 33, ny = 10)
cor(ItemCatMonthlySale$`12`,ItemCatMonthlySale$`20`)
cor(ItemCatMonthlySale$`12`,lag(ItemCatMonthlySale$`20`,1))
cor(ItemCatMonthlySale$`12`,lag(ItemCatMonthlySale$`20`,1),na.rm = T)
cor(ItemCatMonthlySale$`12`[1:32],lag(ItemCatMonthlySale$`20`,1))
length(lag(ItemCatMonthlySale$`20`,1))
length(ItemCatMonthlySale$`20`,1)
lag(ItemCatMonthlySale$`20`,1)
ItemCatMonthlySale$`12`
lag(ItemCatMonthlySale$`12`)
ItemCatMonthlySale$`20`
cor(lag(ItemCatMonthlySale$`20`,1)[-1],ItemCatMonthlySale$`12`[-34])
as.ts(ItemCatMonthlySale[-1],start = c(0,1))
fpp::vn
tseries <- as.ts(ItemCatMonthlySale[-1],start = c(0,1))
tseries[ ,"0"]
snowfall <- readxl::read_xls("annual-snowfall-in-buffalo-19101.xls",skip = 13,col_names = F)
snowfallts <- ts(data = snowfall$X__2,start = c(1910,1),frequency = 1)
autoplot(snowfallts)
snowfall
snowfallts
ggplot(data = snowfall,mapping = aes(x = X__1, y = X__2 )) + geom_point() + geom_smooth()
training <- window(snowfallts, end = c(1966,1))
training
training <- window(snowfallts, end = c(1966,1))
library(forecast)
AAN <- forecast::ets(training,model = "AAN")
autoplot(AAN)
checkresiduals(AAN)
ets.fit <- forecast::ets(training,model = "ZZZ")
ets.damped <- forecast::ets(training,model = "ZZZ",damped = T)
checkresiduals(ets.fit)
checkresiduals(ets.damped)
accuracy(ets.fit,snowfallts)
Accuracy.df <- rbind.data.frame(AAN.fit = accuracy(AAN), AAN.damp.fit = accuracy(AAN.damp),
MAN.fit = accuracy(MAN), MAN.damp.fit = accuracy(MAN.damp),
MNN.fit = accuracy(ets.fit), AAdN.fit = accuracy(ets.damped))
# Week 3 discussion
# Read in data
snowfall <- readxl::read_xls("annual-snowfall-in-buffalo-19101.xls",skip = 13,col_names = F)
snowfallts <- ts(data = snowfall$X__2,start = c(1910,1),frequency = 1)
# Visualization
autoplot(snowfallts)
## The data seems (visually) to have a slight trend ; upward from 1920 onwards. The loess smoother seems to convey the same story.
library(ggplot2)
ggplot(data = snowfall,mapping = aes(x = X__1, y = X__2 )) + geom_point() + geom_smooth()
## It can be seen that the trend does not continue and levels off at atound 1960. It'll be usedul to try ETS models without seasonality - AAN, MAN. The damped and undamped model. Based on the look of the data, a damped model might work well.
## Lets split that data into training and test
training <- window(snowfallts, end = c(1966,1))
# AAN - Holts method
library(forecast)
## We'll use the ets() to make an optimized selection for alpha and beta parameters
AAN <- forecast::ets(training,model = "AAN")
MAN <- forecast::ets(training, model = "MAN")
AAN.damp <- forecast::ets(training,model = "AAN", damped = T)
MAN.damp <- forecast::ets(training, model = "MAN",damped = T)
## Based on the AIC's the MAN model seem to be a best model. However I am curious What does ets() say as the best model?
## Oh! Thanks to Rahul Sangole who pointed me to this https://robjhyndman.com/hyndsight/aic/ . I realized I am needing to choose the models based on AIC because the smoothing parameters were optimized based on Maximum Likelihood estimate.
ets.fit <- forecast::ets(training,model = "ZZZ")
ets.damped <- forecast::ets(training,model = "ZZZ",damped = T)
## ets of MNN seemed to be the best so far.
plot(ets.fit)
Accuracy.df <- rbind.data.frame(AAN.fit = accuracy(AAN), AAN.damp.fit = accuracy(AAN.damp),
MAN.fit = accuracy(MAN), MAN.damp.fit = accuracy(MAN.damp),
MNN.fit = accuracy(ets.fit), AAdN.fit = accuracy(ets.damped))
knitr::kable(round(Accuracy.df,2))
sweep::sw_glance(ets.fit)
sweep::sw_glance(ets.fit,ets.damped)
Models <- list(AAN, MAN, AAN.damp, MAN.damp, ets.fit, ets.damped)
View(Models)
purrr::map_df(.x = Models, .f = sweep::sw_augment)
purrr::map_df(.x = Models, .f = ~sweep::sw_augment)
purrr::walk(.x = Models, .f = ~sweep::sw_augment)
purrr::walk(.x = Models, .f = sweep::sw_augment)
View(.Last.value)
purrr::walk(.x = Models, .f = sweep::sw_augment(.))
purrr::walk(.x = Models, .f = sweep::sw_augment)
test <- purrr::walk(.x = Models, .f = sweep::sw_augment)
View(test)
test <- purrr::map_df(.x = Models, .f = sweep::sw_augment)
test
lapply(Models,sweep::sw_glance)
sapply(Models,sweep::sw_glance)
t(sapply(Models,sweep::sw_glance))
as.data.frame(t(sapply(Models,sweep::sw_glance)))
forecast.ets <- forecast(ets.fit, h = 6)
accuracy(forecast.ets,snowfallts)
autoplot(forecast.ets)
checkresiduals(ets.fit)
ets.fit %>% forecast(h = 6) %>% autoplot()
auto.arima(y = training)
forecast.ARIMA <- forecast(ARIMA.fit, h = 6)
ARIMA.fit <- auto.arima(y = training)
forecast.ARIMA <- forecast(ARIMA.fit, h = 6)
autoplot(ARIMA.fit)
autoplot(forecast.ARIMA)
accuracy(forecast.ets,training)
accuracy(forecast.ets,snowfallts)
accuracy(forecast.ARIMA,snowfallts)
Accuracy.df <- rbind.data.frame(MNN.fit = accuracy(forecast.ets,snowfallts),
ARIMA = accuracy(forecast.ARIMA,snowfallts))
Accuracy.df
ARIMA.fit
ggplot(data = snowfall,mapping = aes(x = X__1, y = X__2 )) + geom_line() + geom_smooth()
summary(ARIMA.fit)
knitr::opts_chunk$set(echo = FALSE)
!["Optical Fiber"] ('.\Figures\opticalfiber.png')
!"Optical Fiber" ('.\Figures\opticalfiber.png')
!"Optical Fiber" ('./Figures/opticalfiber.png')
!["Optical Fiber"] (./Figures/opticalfiber.png)
include_graphics('./Figures/opticalfiber.png')
