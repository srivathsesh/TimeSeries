plot(transformedBricksq)
grid(nx = NULL, ny = 156/4, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = TRUE)
data("bricksq")
plot(bricksq)
bricksq.lambda <- BoxCox.lambda(bricksq)
transformedBricksq <- BoxCox(bricksq,bricksq.lambda)
plot(transformedBricksq)
grid(ny = NULL, nx = 156/4, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = TRUE)
data("bricksq")
plot(bricksq,main = "Quarterly production of bricks (in millions) at Portland, Australia")
grid(ny = NULL, nx = 156/4, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = TRUE)
bricksq.lambda <- BoxCox.lambda(bricksq)
transformedBricksq <- BoxCox(bricksq,bricksq.lambda)
plot(transformedBricksq, main = "Transformed Quarterly production of bricks at Portland, Australia")
grid(ny = NULL, nx = 156/4, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = TRUE)
data("bricksq")
plot(bricksq,main = "Quarterly production of bricks (in millions) at Portland, Australia",cex.main = 0.5)
grid(ny = NULL, nx = 156/4, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = TRUE)
bricksq.lambda <- BoxCox.lambda(bricksq)
transformedBricksq <- BoxCox(bricksq,bricksq.lambda)
plot(transformedBricksq, main = "Transformed Quarterly production of bricks at Portland, Australia")
grid(ny = NULL, nx = 156/4, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = TRUE)
data("bricksq")
plot(bricksq,main = "Quarterly production of bricks (in millions) at Portland, Australia",cex.main = 0.8)
grid(ny = NULL, nx = 156/4, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = TRUE)
bricksq.lambda <- BoxCox.lambda(bricksq)
transformedBricksq <- BoxCox(bricksq,bricksq.lambda)
plot(transformedBricksq, main = "Transformed Quarterly production of bricks at Portland, Australia")
grid(ny = NULL, nx = 156/4, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = TRUE)
data("bricksq")
plot(bricksq,main = "Quarterly production of bricks (in millions) at Portland, Australia",cex.main = 0.8)
grid(ny = NULL, nx = 156/4, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = TRUE)
bricksq.lambda <- BoxCox.lambda(bricksq)
transformedBricksq <- BoxCox(bricksq,bricksq.lambda)
plot(transformedBricksq, main = "Transformed Quarterly production of bricks at Portland, Australia",cex.main = 0.8)
grid(ny = NULL, nx = 156/4, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = TRUE)
data("bricksq")
plot(bricksq,main = "Quarterly production of bricks (in millions) at Portland, Australia",cex.main = 0.8,ylab ="")
grid(ny = NULL, nx = 156/4, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = TRUE)
bricksq.lambda <- BoxCox.lambda(bricksq)
transformedBricksq <- BoxCox(bricksq,bricksq.lambda)
plot(transformedBricksq, main = "Transformed Quarterly production of bricks at Portland, Australia",cex.main = 0.8, ylab ="")
grid(ny = NULL, nx = 156/4, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = TRUE)
data("bricksq")
par(mfrow = c(2,1))
plot(bricksq,main = "Quarterly production of bricks (in millions) at Portland, Australia",cex.main = 0.8,ylab ="")
grid(ny = NULL, nx = 156/4, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = TRUE)
bricksq.lambda <- BoxCox.lambda(bricksq)
transformedBricksq <- BoxCox(bricksq,bricksq.lambda)
plot(transformedBricksq, main = "Transformed Quarterly production of bricks at Portland, Australia",cex.main = 0.8, ylab ="")
grid(ny = NULL, nx = 156/4, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = TRUE)
data("bricksq")
par(mfrow = c(2,1))
plot(bricksq,main = "Quarterly production of bricks (in millions) at Portland, Australia",cex.main = 0.8,ylab ="")
grid(ny = NULL, nx = 156/4, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = TRUE)
bricksq.lambda <- BoxCox.lambda(bricksq)
transformedBricksq <- BoxCox(bricksq,bricksq.lambda)
plot(transformedBricksq, main = "Transformed Quarterly production of bricks at Portland, Australia",cex.main = 0.8, ylab ="")
grid(ny = NULL, nx = 156/4, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = TRUE)
data("bricksq")
par(mfrow = c(2,1))
plot(bricksq,main = "Quarterly production of bricks (in millions) at Portland, Australia",cex.main = 1,ylab ="")
grid(ny = NULL, nx = 156/4, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = TRUE)
bricksq.lambda <- BoxCox.lambda(bricksq)
transformedBricksq <- BoxCox(bricksq,bricksq.lambda)
plot(transformedBricksq, main = "Transformed Quarterly production of bricks at Portland, Australia",cex.main = 1, ylab ="")
grid(ny = NULL, nx = 156/4, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = TRUE)
knitr::opts_chunk$set(echo = F)
library(magrittr)
library(dplyr)
library(fpp)
library(forecast)
library(fma)
data("dowjones")
plot(dowjones)
driftmeth <- forecast::rwf(dowjones, h = 10, drift = T)
data("dowjones")
driftmeth <- forecast::rwf(dowjones, h = 10, drift = T)
plot(dowjones,xlim = c(1,88))
lines(driftmeth$fitted, col = "blue")
data("dowjones")
driftmeth <- forecast::rwf(dowjones, h = 10, drift = T)
plot(dowjones,xlim = c(1,88))
lines(driftmeth$mean, col = "blue")
slope <- (dowjones[78] - dowjones[1])/length(dowjones - 1)
y <- dowjones[1] + seq(1:78)*slope
plot(y)
data("dowjones")
slope <- (dowjones[78] - dowjones[1])/length(dowjones - 1)
y <- dowjones[1] + seq(1:78)*slope
driftmeth <- forecast::rwf(dowjones, h = 10, drift = T)
plot(dowjones,xlim = c(1,88))
lines(driftmeth$mean, col = "blue")
lines(y,col = "grey")
data("dowjones")
slope <- (dowjones[78] - dowjones[1])/length(dowjones - 1)
y <- dowjones[1] + seq(1:78)*slope
driftmeth <- forecast::rwf(dowjones, h = 10, drift = T)
plot(dowjones,xlim = c(1,88))
lines(driftmeth$mean, col = "blue")
lines(y,col = "grey",lty =2)
accuracy(driftmeth)
accuracy(driftmeth)
accuracy(meanmethod)
data("dowjones")
slope <- (dowjones[78] - dowjones[1])/length(dowjones - 1)
y <- dowjones[1] + seq(1:78)*slope
driftmeth <- forecast::rwf(dowjones, h = 10, drift = T)
meanmethod <- forecast::meanf(djones,h=10)
data("dowjones")
slope <- (dowjones[78] - dowjones[1])/length(dowjones - 1)
y <- dowjones[1] + seq(1:78)*slope
driftmeth <- forecast::rwf(dowjones, h = 10, drift = T)
meanmethod <- forecast::meanf(dowjones,h=10)
naivemethod <- forecast::naive(dowjones,h =10)
seasonnaivemethod <- forecast::snaive(dj2,h = 42)
data("dowjones")
slope <- (dowjones[78] - dowjones[1])/length(dowjones - 1)
y <- dowjones[1] + seq(1:78)*slope
driftmeth <- forecast::rwf(dowjones, h = 10, drift = T)
meanmethod <- forecast::meanf(dowjones,h=10)
naivemethod <- forecast::naive(dowjones,h =10)
seasonnaivemethod <- forecast::snaive(dowjones,h = 10)
plot(dowjones,xlim = c(1,88))
lines(driftmeth$mean, col = "blue")
lines(y,col = "grey",lty =2)
accuracy(driftmeth)
accuracy(meanmethod)
accuracy(naivemethod)
accuracy(seasonnaivemethod)
data.frame(Drift = accuracy(driftmeth), Mean = accuracy(meanmethod),Naive = accuracy(naivemethod), SeasonalNaive = accuracy(seasonnaivemethod))
rbind.data.frame(Drift = accuracy(driftmeth), Mean = accuracy(meanmethod),Naive = accuracy(naivemethod), SeasonalNaive = accuracy(seasonnaivemethod))
Acf(driftmeth)
Acf(dowjones)
Acf(driftmeth$residuals)
Acf(naivemethod$residuals)
Acf(seasonnaivemethod$residuals)
Acf(meanmethod$residuals)
qqplot(driftmeth$residuals)
qqnorm(driftmeth$residuals)
stats::qqnorm(driftmeth$residuals)
stats::qqnorm(driftmeth$residuals)
stats::qqnorm(driftmeth$residuals, type = "p")
y <- rt(200, df = 5)
qqnorm(y); qqline(y, col = 2)
stats::qqnorm(as.numeric(driftmeth$residuals), type = "p")
stats::qqnorm(as.numeric(driftmeth$residuals), type = "p")
qqline(as.numeric(driftmeth$residuals))
stats::qqnorm(as.numeric(driftmeth$residuals), type = "p")
qqline(as.numeric(driftmeth$residuals), col = "red")
stats::qqnorm(as.numeric(naivemethod$residuals), type = "p")
qqline(as.numeric(naivemethod$residuals), col = "red")
stats::qqnorm(as.numeric(driftmeth$residuals), type = "p")
qqline(as.numeric(driftmeth$residuals), col = "red")
stats::qqnorm(as.numeric(naivemethod$residuals), type = "p")
qqline(as.numeric(naivemethod$residuals), col = "red")
data("dowjones")
slope <- (dowjones[78] - dowjones[1])/length(dowjones - 1)
y <- dowjones[1] + seq(1:78)*slope
driftmeth <- forecast::rwf(dowjones, h = 10, drift = T)
meanmethod <- forecast::meanf(dowjones,h=10)
naivemethod <- forecast::naive(dowjones,h =10)
seasonnaivemethod <- forecast::snaive(dowjones,h = 10)
plot(dowjones,xlim = c(1,88))
lines(driftmeth$mean, col = "blue")
lines(y,col = "grey",lty =2)
Metrics <- rbind.data.frame(Drift = accuracy(driftmeth), Mean = accuracy(meanmethod),Naive = accuracy(naivemethod), SeasonalNaive = accuracy(seasonnaivemethod))
Acf(driftmeth$residuals)
Acf(naivemethod$residuals)
Acf(seasonnaivemethod$residuals)
Acf(meanmethod$residuals)
stats::qqnorm(as.numeric(driftmeth$residuals), type = "p")
qqline(as.numeric(driftmeth$residuals), col = "red")
stats::qqnorm(as.numeric(naivemethod$residuals), type = "p")
qqline(as.numeric(naivemethod$residuals), col = "red")
data("dowjones")
slope <- (dowjones[78] - dowjones[1])/length(dowjones - 1)
y <- dowjones[1] + seq(1:78)*slope
driftmeth <- forecast::rwf(dowjones, h = 10, drift = T)
meanmethod <- forecast::meanf(dowjones,h=10)
naivemethod <- forecast::naive(dowjones,h =10)
seasonnaivemethod <- forecast::snaive(dowjones,h = 10)
plot(dowjones,xlim = c(1,88))
lines(driftmeth$mean, col = "blue")
lines(y,col = "grey",lty =2)
lines(naivemethod$mean, col = "red")
lines(meanmethod$mean, col = "grey")
lines(seasonnaivemethod$mean, col = "green")
Metrics <- rbind.data.frame(Drift = accuracy(driftmeth), Mean = accuracy(meanmethod),Naive = accuracy(naivemethod), SeasonalNaive = accuracy(seasonnaivemethod))
Acf(driftmeth$residuals)
Acf(naivemethod$residuals)
Acf(seasonnaivemethod$residuals)
Acf(meanmethod$residuals)
stats::qqnorm(as.numeric(driftmeth$residuals), type = "p")
qqline(as.numeric(driftmeth$residuals), col = "red")
stats::qqnorm(as.numeric(naivemethod$residuals), type = "p")
qqline(as.numeric(naivemethod$residuals), col = "red")
data("dowjones")
slope <- (dowjones[78] - dowjones[1])/length(dowjones - 1)
y <- dowjones[1] + seq(1:78)*slope
driftmeth <- forecast::rwf(dowjones, h = 10, drift = T)
meanmethod <- forecast::meanf(dowjones,h=10)
naivemethod <- forecast::naive(dowjones,h =10)
seasonnaivemethod <- forecast::snaive(dowjones,h = 10)
plot(dowjones,xlim = c(1,88))
lines(driftmeth$mean, col = "blue")
lines(y,col = "grey",lty =2)
lines(naivemethod$mean, col = "red")
lines(meanmethod$mean, col = "grey")
#lines(seasonnaivemethod$mean, col = "green")
Metrics <- rbind.data.frame(Drift = accuracy(driftmeth), Mean = accuracy(meanmethod),Naive = accuracy(naivemethod), SeasonalNaive = accuracy(seasonnaivemethod))
Acf(driftmeth$residuals)
Acf(naivemethod$residuals)
Acf(seasonnaivemethod$residuals)
Acf(meanmethod$residuals)
stats::qqnorm(as.numeric(driftmeth$residuals), type = "p")
qqline(as.numeric(driftmeth$residuals), col = "red")
stats::qqnorm(as.numeric(naivemethod$residuals), type = "p")
qqline(as.numeric(naivemethod$residuals), col = "red")
knitr::opts_chunk$set(echo = F)
library(magrittr)
library(dplyr)
library(fpp)
library(forecast)
library(fma)
data("dowjones")
slope <- (dowjones[78] - dowjones[1])/length(dowjones - 1)
y <- dowjones[1] + seq(1:78)*slope
driftmeth <- forecast::rwf(dowjones, h = 10, drift = T)
meanmethod <- forecast::meanf(dowjones,h=10)
naivemethod <- forecast::naive(dowjones,h =10)
seasonnaivemethod <- forecast::snaive(dowjones,h = 10)
plot(dowjones,xlim = c(1,88))
lines(driftmeth$mean, col = "blue")
lines(y,col = "grey",lty =2)
lines(naivemethod$mean, col = "red")
lines(meanmethod$mean, col = "grey")
#lines(seasonnaivemethod$mean, col = "green")
data("dowjones")
slope <- (dowjones[78] - dowjones[1])/length(dowjones - 1)
y <- dowjones[1] + seq(1:78)*slope
driftmeth <- forecast::rwf(dowjones, h = 10, drift = T)
meanmethod <- forecast::meanf(dowjones,h=10)
naivemethod <- forecast::naive(dowjones,h =10)
seasonnaivemethod <- forecast::snaive(dowjones,h = 10)
plot(dowjones,xlim = c(1,88))
lines(driftmeth$mean, col = "blue")
lines(y,col = "grey",lty =2)
lines(naivemethod$mean, col = "red")
lines(meanmethod$mean, col = "grey")
#lines(seasonnaivemethod$mean, col = "green")
legend("topright", legend = c("Mean method", "Naive method", "Drift method"), col = c("grey","red","blue"), lty = 1, cex = 0.5)
#lines(seasonnaivemethod$mean, col = "green")
legend("bottomright", legend = c("Mean method", "Naive method", "Drift method"), col = c("grey","red","blue"), lty = 1, cex = 0.5)
data("dowjones")
slope <- (dowjones[78] - dowjones[1])/length(dowjones - 1)
y <- dowjones[1] + seq(1:78)*slope
driftmeth <- forecast::rwf(dowjones, h = 10, drift = T)
meanmethod <- forecast::meanf(dowjones,h=10)
naivemethod <- forecast::naive(dowjones,h =10)
seasonnaivemethod <- forecast::snaive(dowjones,h = 10)
plot(dowjones,xlim = c(1,88))
lines(driftmeth$mean, col = "blue")
lines(y,col = "grey",lty =2)
lines(naivemethod$mean, col = "red")
lines(meanmethod$mean, col = "grey")
#lines(seasonnaivemethod$mean, col = "green")
legend("bottomright", legend = c("Mean method", "Naive method", "Drift method"), col = c("grey","red","blue"), lty = 1, cex = 0.5)
Acf(driftmeth$residuals, main = "Drift Method residuals")
Acf(driftmeth$residuals, main = "Drift Method residuals")
Acf(driftmeth$residuals, main = "Drift Method residuals",cex.main = 0.6)
Acf(driftmeth$residuals, main = "Drift Method residuals",cex.main = 0.6)
par(mfrow = c(2,2))
Acf(driftmeth$residuals, main = "Drift Method residuals",cex.main = 0.6)
Acf(naivemethod$residuals, main = "Naive method residuals", cex.main - 0.5)
naivemethod <- forecast::naive(dowjones,h =10)
par(mfrow = c(2,2))
Acf(driftmeth$residuals, main = "Drift Method residuals",cex.main = 0.6)
Acf(naivemethod$residuals, main = "Naive method residuals", cex.main - 0.5)
par(mfrow = c(2,2))
Acf(driftmeth$residuals, main = "Drift Method residuals",cex.main = 0.6)
Acf(naivemethod$residuals, main = "Naive method residuals", cex.main - 0.5)
par(mfrow = c(2,2))
Acf(driftmeth$residuals, main = "Drift Method residuals",cex.main = 0.6)
Acf(naivemethod$residuals, main = "Naive method residuals", cex.main = 0.5)
Acf(seasonnaivemethod$residuals, main = "Seasonal Naive residuals",cex.main - 0.5)
par(mfrow = c(2,2))
Acf(driftmeth$residuals, main = "Drift Method residuals",cex.main = 0.6)
Acf(naivemethod$residuals, main = "Naive method residuals", cex.main = 0.5)
Acf(seasonnaivemethod$residuals, main = "Seasonal Naive residuals",cex.main = 0.5)
Acf(meanmethod$residuals, main = "Mean method residuals", cex.main = 0.5)
stats::qqnorm(as.numeric(driftmeth$residuals), type = "p")
qqline(as.numeric(driftmeth$residuals), col = "red")
stats::qqnorm(as.numeric(naivemethod$residuals), type = "p")
qqline(as.numeric(naivemethod$residuals), col = "red")
stats::qqnorm(as.numeric(driftmeth$residuals), type = "p",main = "Drift method residuals")
qqline(as.numeric(driftmeth$residuals), col = "red")
stats::qqnorm(as.numeric(naivemethod$residuals), type = "p", main = "Naive method residuals")
qqline(as.numeric(naivemethod$residuals), col = "red")
par(mfrow = c(2,2))
Acf(driftmeth$residuals, main = "Drift Method residuals",cex.main = 0.6)
Acf(naivemethod$residuals, main = "Naive method residuals", cex.main = 0.5)
Acf(seasonnaivemethod$residuals, main = "Seasonal Naive residuals",cex.main = 0.5)
Acf(meanmethod$residuals, main = "Mean method residuals", cex.main = 0.5)
par(mfrow = c(2,2))
stats::qqnorm(as.numeric(driftmeth$residuals), type = "p",main = "Drift method residuals")
qqline(as.numeric(driftmeth$residuals), col = "red")
stats::qqnorm(as.numeric(naivemethod$residuals), type = "p", main = "Naive method residuals")
qqline(as.numeric(naivemethod$residuals), col = "red")
stats::qqnorm(as.numeric(seasonnaivemethod$residuals), type = "p", main = "Seasonal Naive method residuals")
qqline(as.numeric(seasonnaivemethod$residuals), col = "red")
stats::qqnorm(as.numeric(meanmethod$residuals), type = "p", main = "Naive method residuals")
qqline(as.numeric(meanmethod$residuals), col = "red")
par(mfrow = c(2,2))
Acf(driftmeth$residuals, main = "Drift Method residuals",cex.main = 0.6)
Acf(naivemethod$residuals, main = "Naive method residuals", cex.main = 0.5)
Acf(seasonnaivemethod$residuals, main = "Seasonal Naive residuals",cex.main = 0.5)
Acf(meanmethod$residuals, main = "Mean method residuals", cex.main = 0.5)
par(mfrow = c(2,2))
stats::qqnorm(as.numeric(driftmeth$residuals), type = "p",main = "Drift method residuals")
qqline(as.numeric(driftmeth$residuals), col = "red")
stats::qqnorm(as.numeric(naivemethod$residuals), type = "p", main = "Naive method residuals")
qqline(as.numeric(naivemethod$residuals), col = "red")
stats::qqnorm(as.numeric(seasonnaivemethod$residuals), type = "p", main = "Seasonal Naive method residuals")
qqline(as.numeric(seasonnaivemethod$residuals), col = "red")
stats::qqnorm(as.numeric(meanmethod$residuals), type = "p", main = "Mean method residuals")
qqline(as.numeric(meanmethod$residuals), col = "red")
Metrics <- rbind.data.frame(Drift = accuracy(driftmeth), Mean = accuracy(meanmethod),Naive = accuracy(naivemethod), SeasonalNaive = accuracy(seasonnaivemethod))
knitr::kable(Metrics, caption = "Accuracy metrics of benchmark models")
Metrics <- rbind.data.frame(Drift = accuracy(driftmeth), Mean = accuracy(meanmethod),Naive = accuracy(naivemethod), SeasonalNaive = accuracy(seasonnaivemethod))
knitr::kable(round(Metrics,3), caption = "Accuracy metrics of benchmark models")
knitr::opts_chunk$set(echo = F)
library(magrittr)
library(dplyr)
library(fpp)
library(forecast)
library(fma)
data("dowjones")
slope <- (dowjones[78] - dowjones[1])/length(dowjones - 1)
y <- dowjones[1] + seq(1:78)*slope
driftmeth <- forecast::rwf(dowjones, h = 10, drift = T)
meanmethod <- forecast::meanf(dowjones,h=10)
naivemethod <- forecast::naive(dowjones,h =10)
seasonnaivemethod <- forecast::snaive(dowjones,h = 10)
plot(dowjones,xlim = c(1,88), ylab = "index", main = "Dow Jones industrial average")
lines(driftmeth$mean, col = "blue")
lines(y,col = "grey",lty =2)
lines(naivemethod$mean, col = "red")
lines(meanmethod$mean, col = "grey")
#lines(seasonnaivemethod$mean, col = "green")
legend("bottomright", legend = c("Mean method", "Naive method", "Drift method"), col = c("grey","red","blue"), lty = 1, cex = 0.5)
knitr::kable(data.frame(Time = seq(79:88), index = driftmeth$mean))
seq(79:88)
79:88
knitr::kable(data.frame(Time = 79:88, index = driftmeth$mean), )
plot(dowjones,xlim = c(1,88), ylab = "index", main = "Dow Jones industrial average")
lines(driftmeth$mean, col = "blue")
lines(y,col = "grey",lty =2)
lines(naivemethod$mean, col = "red")
lines(meanmethod$mean, col = "grey")
#lines(seasonnaivemethod$mean, col = "green")
legend("bottomright", legend = c("Mean method", "Naive method", "Drift method", "first last point line"), col = c("grey","red","blue", "grey"), lty = c(1,1,1,2), cex = 0.5)
par(mfrow = c(2,2))
Acf(driftmeth$residuals, main = "Drift Method residuals",cex.main = 0.6)
Acf(naivemethod$residuals, main = "Naive method residuals", cex.main = 0.5)
Acf(seasonnaivemethod$residuals, main = "Seasonal Naive residuals",cex.main = 0.5)
Acf(meanmethod$residuals, main = "Mean method residuals", cex.main = 0.5)
par(mfrow = c(2,2))
stats::qqnorm(as.numeric(driftmeth$residuals), type = "p",main = "Drift method residuals")
qqline(as.numeric(driftmeth$residuals), col = "red")
stats::qqnorm(as.numeric(naivemethod$residuals), type = "p", main = "Naive method residuals")
qqline(as.numeric(naivemethod$residuals), col = "red")
stats::qqnorm(as.numeric(seasonnaivemethod$residuals), type = "p", main = "Seasonal Naive method residuals")
qqline(as.numeric(seasonnaivemethod$residuals), col = "red")
stats::qqnorm(as.numeric(meanmethod$residuals), type = "p", main = "Mean method residuals")
qqline(as.numeric(meanmethod$residuals), col = "red")
data("ibmclose")
plot(ibmclose,ylab = "index", main = "IBM closing stock price")
head(ibmclose)
data("ibmclose")
plot(ibmclose,ylab = "index", main = "IBM closing stock price")
train <- ibmclose[1:300]
test <- ibmclose[-1:-300]
plot(train, ylab = "Stock Price", main = "IBM clsoing stock price",sub = "Training set")
plot(train, ylab = "Stock Price", main = "IBM clsoing stock price")
mtext("Training set")
mtext("Training set", line = 1)
plot(train, ylab = "Stock Price", main = "IBM clsoing stock price")
mtext("Training set", line = 1)
plot(train, ylab = "Stock Price", main = "IBM clsoing stock price")
mtext("Training set", line = -1)
plot(train, ylab = "Stock Price", main = "IBM clsoing stock price")
mtext("Training set", outer = T)
plot(train, ylab = "Stock Price", main = "IBM clsoing stock price")
mtext("Training set", outer = T, line = -1)
data("ibmclose")
plot(ibmclose,ylab = "Stock Price", main = "IBM closing stock price")
train <- ts(ibmclose[1:300])
test <- ts(ibmclose[-1:-300])
plot(train, ylab = "Stock Price", main = "IBM closing stock price")
mtext("Training set", outer = T, line = -1)
plot(train, ylab = "Stock Price", main = "IBM closing stock price \n Training set")
hist(ibmclose)
plot(train, ylab = "Stock Price", main = "IBM closing stock price \n Training set")
par(mfrow = c(2,2))
Acf(driftmeth$residuals, main = "Drift Method residuals",cex.main = 0.6)
Acf(naivemethod$residuals, main = "Naive method residuals", cex.main = 0.5)
Acf(seasonnaivemethod$residuals, main = "Seasonal Naive residuals",cex.main = 0.5)
Acf(meanmethod$residuals, main = "Mean method residuals", cex.main = 0.5)
par(mfrow = c(2,2))
Acf(driftmeth$residuals, sub = "Drift Method residuals",cex.main = 0.6)
Acf(naivemethod$residuals, main = "Naive method residuals", cex.main = 0.5)
Acf(seasonnaivemethod$residuals, main = "Seasonal Naive residuals",cex.main = 0.5)
Acf(meanmethod$residuals, main = "Mean method residuals", cex.main = 0.5)
drift.fit <- rwf(y = train,drift = T)
hist(drift.fit$residuals)
plot(train, ylab = "Stock Price", main = "IBM closing stock price \n Training set")
data("ibmclose")
plot(ibmclose,ylab = "Stock Price", main = "IBM closing stock price")
hist(ibmclose)
train <- ts(ibmclose[1:300])
test <- ts(ibmclose[-1:-300])
plot(train, ylab = "Stock Price", main = "IBM closing stock price \n Training set")
drift.fit <- rwf(y = train,drift = T)
hist(drift.fit$residuals)
install.packages("smooth")
smooth::sma(ibmclose,h=1)
smooth::sma(ibmclose,h=69)
drift.fit <- rwf(y = train,drift = T,h =1)
hist(drift.fit$residuals)
mean.fit <- meanf(train,h = 1)
hist(mean.fit$residuals)
naive.fit <- naive(train,h=1)
hist(naive.fit$residuals)
hist(drift.fit$residuals)
hist(log10(ibmclose))
hist(ibmclose)
hist(ibmclose)
hist(log10(ibmclose))
plot(log10(ibmclose))
plot(log(ibmclose))
BoxCox.lambda(ibmclose)
plot(sqrt(ibmclose))
hist(sqrt(ibmclose))
hist(1/sqrt(ibmclose))
plot(1/sqrt(ibmclose))
plot(BoxCox(ibmclose,1.999924)
)
hist(BoxCox(ibmclose,1.999924))
plot(ibmclose,ylab = "Stock Price", main = "IBM closing stock price")
plot(ibmclose,ylab = "Stock Price", main = "IBM closing stock price")
plot(BoxCox(ibmclose,1.999924))
hist(BoxCox(ibmclose,1.999924))
train.trans <- BoxCox(train,BoxCox.lambda(train))
BoxCox.lambda(train)
naive.fit.trans <- meanf(train.trans,h=1)
plot(naive.fit.trans$residuals)
plot(naive.fit$residuals)
forecast.Tran <- InvBoxCox(naive.fit.trans$fitted,BoxCox.lambda(train))
hist(train - forecast.Tran)
hist(mean.fit$residuals)
plot(train - forecast.Tran)
plot(naive.fit.trans$residuals)
plot(naive.fit.trans$residuals)
Acf(train)
forecast::forecast(naive.fit,newdata = test, h = 1)
generatedForecasts <- sapply(1:69,function(x) forecast(naive.fit,newdata = ibmclose[1:300+x-1], h = 1))
generatedForecasts
View(generatedForecasts)
generatedForecasts <- sapply(1:69,function(x) forecast(naive.fit,newdata = ibmclose[1:300+x-1], h = 1)$mean)
View(generatedForecasts)
plot(train, ylab = "Stock Price", main = "IBM closing stock price \n Training set")
tail(train)
generatedForecasts <- sapply(1:69,function(x) naive(ibmclose[1:300+x-1], h = 1)$mean)
View(generatedForecasts)
plot(test - generatedForecasts)
hist(test - generatedForecasts)
drift.generatedForecasts <- sapply(1:69,function(x) rwf(ibmclose[1:300+x-1], h = 1,drift = T)$mean)
plot(test - drift.generatedForecasts)
hist(test - drift.generatedForecasts)
hist(test - generatedForecasts)
sd(test - generatedForecasts)
sd(test - drift.generatedForecasts)
mean(abs(test - generatedForecasts))
mean(abs(test - drift.generatedForecasts))
data("hsales")
plot(hsales)
seasonplot(hsales)
monthplot(hsales)
data("hsales")
plot(hsales)
seasonplot(hsales)
monthplot(hsales)
seasonplot(hsales,year.labels = T)
