checkresiduals(snaive.mdl)
checkresiduals(stl.ets)
checkresiduals(stl.ets.res)
checkresiduals(hw.m.fit)
checkresiduals(ets.mdl)
checkresiduals(ets.additive)
checkresiduals(snaive.mdl)
checkresiduals(stl.ets.res)
plot(stl.ets.res)
checkresiduals(hw.m.fit)
checkresiduals(ets.mdl)
checkresiduals(ets.additive)
checkresiduals(snaive.mdl)
plot(stl.ets.res)
Acf(stl.ets.res)
hist(stl.ets.res)
checkresiduals(stl.ets.res)
r1 <- checkresiduals(hw.m.fit)
r2 <- checkresiduals(ets.mdl)
r3 <- checkresiduals(ets.additive)
r4 <- checkresiduals(snaive.mdl)
r5 <- checkresiduals(stl.ets.res)
gridExtra::grid.arrange(r1,r2,r3,r4,r5, ncol = 3)
par(mfrow = c(2,3))
r1 <- checkresiduals(hw.m.fit)
r2 <- checkresiduals(ets.mdl)
r3 <- checkresiduals(ets.additive)
r4 <- checkresiduals(snaive.mdl)
r5 <- checkresiduals(stl.ets.res)
y <- AR1simul(0.05)
set.seed(1)
ytest <- arima.sim(list(ar=0.05),n = 100)
plot(ytest, type = "l")
plot(y)
AR1simul <- function(phi){
set.seed(1)
y <- ts(numeric(100))
e <- rnorm(100)
for(i in 2:100)
y[i] <- phi*y[i-1] + e[i]
plot(y, main = paste("AR(1) of phi = ",phi), cex.main = 0.7)
}
y <- AR1simul(0.05)
set.seed(1)
ytest <- arima.sim(list(ar=0.05),n = 100)
apply(c(-0.3, -0.1, 0.2, 0.4, 0.6, 0.8),1,AR1simul)
# y <- AR1simul(0.05)
# set.seed(1)
# ytest <- arima.sim(list(ar=0.05),n = 100)
phi <- c(-0.3, -0.1, 0.2, 0.4, 0.6, 0.8)
apply(phi,1,AR1simul)
apply(phi,2,AR1simul)
lpply(phi,2,AR1simul)
lapply(phi,2,AR1simul)
lapply(phi,1,AR1simul)
lapply(phi,AR1simul)
par(mfrow = c(3,2))
lapply(phi,AR1simul)
phi <- c(-1.2,-0.8,-0.3, -0.1, 0.2, 0.4, 0.6, 0.8,1,1.2)
par(mfrow = c(5,2))
lapply(phi,AR1simul)
lapply(phi,AR1simul)
phi <- c(-1.2,-0.8,-0.3, -0.1, 0.2, 0.4, 0.6, 0.8,1.2)
par(mfrow = c(3,3))
lapply(phi,AR1simul)
phi <- c(-1.2,-0.8,-0.3, -0.1, 0.2, 0.4, 0.6, 0.8,1.2)
par(mfrow = c(3,3))
test <- lapply(phi,AR1simul)
arimsim <- function(ars) {
sim <- arima.sim(list(ar = ars),n = 100)
ts.plot(sim)
}
test2 <- lapply(phi,arimsim)
test2 <- lapply(phi,arimsim[-1])
test2 <- lapply(phi[-1],arimsim)
test2 <- lapply(phi[c(-1,-10)],arimsim)
test2 <- lapply(phi[1],arimsim)
test2 <- lapply(phi[2],arimsim)
test2 <- lapply(phi[5],arimsim)
test2 <- lapply(phi[7],arimsim)
test2 <- lapply(phi[8],arimsim)
test2 <- lapply(phi[9],arimsim)
test2 <- lapply(phi[10],arimsim)
phi <- c(-1.2,-0.8,-0.3, -0.1, 0.2, 0.4, 0.6, 0.8,1)
par(mfrow = c(3,3))
test <- lapply(phi,AR1simul)
phi <- c(-1.2,-0.3, -0.1, 0.2, 0.4, 0.6, 0.8,1, 1.2)
par(mfrow = c(3,3))
test <- lapply(phi,AR1simul)
AR1simul <- function(phi){
set.seed(1)
y <- ts(numeric(100))
e <- rnorm(100)
for(i in 2:100)
y[i] <- phi*y[i-1] + e[i] + 2
plot(y, main = paste("AR(1) of phi = ",phi), cex.main = 0.7)
}
# y <- AR1simul(0.05)
# set.seed(1)
# ytest <- arima.sim(list(ar=0.05),n = 100)
phi <- c(-1.2,-0.3, -0.1, 0.2, 0.4, 0.6, 0.8,1, 1.2)
par(mfrow = c(3,3))
test <- lapply(phi,AR1simul)
AR1simul <- function(phi){
set.seed(1)
y <- ts(numeric(100))
e <- rnorm(100)
for(i in 2:100)
y[i] <- phi*y[i-1] + e[i]
plot(y, main = paste("AR(1) of phi = ",phi), cex.main = 0.7)
}
# y <- AR1simul(0.05)
# set.seed(1)
# ytest <- arima.sim(list(ar=0.05),n = 100)
phi <- c(-1.2,-0.3, -0.1, 0.2, 0.4, 0.6, 0.8,1, 1.2)
par(mfrow = c(3,3))
test <- lapply(phi,AR1simul)
arimsim <- function(ars) {
sim <- arima.sim(list(ma = ars),n = 100)
ts.plot(sim)
}
apply(phi[10],arimsim)
test2 <- lapply(phi[10],arimsim)
MR1simul <- function(phi){
set.seed(1)
y <- ts(numeric(100))
e <- rnorm(100)
for(i in 2:100)
y[i] <- phi*e[i-1] + e[i]
plot(y, main = paste("MR(1) of phi = ",phi), cex.main = 0.7)
}
test <- lapply(phi,MR1simul)
par(mfrow = c(3,3))
test <- lapply(phi,MR1simul)
ts.sim <- arima.sim(list(order = c(1,0,1), ar = 0.6, ma = 0.6), n = 200)
ts.plot(ts.sim)
ts.sim <- arima.sim(list(order = c(1,0,1), ar = 0.6, ma = 0.6), n = 100)
ts.plot(ts.sim)
ts.sim <- arima.sim(list(order = c(0,0,1), ma = 0.6), n = 100)
ts.plot(ts.sim)
ts.sim <- arima.sim(list(order = c(0,0,1), ma = 0.6), n = 100)
ts.plot(ts.sim)
ts.sim <- arima.sim(list(order = c(1,0,1), ar = 0.6, ma = 0.6), n = 100)
ts.plot(ts.sim)
ts.sim <- arima.sim(list(order = c(1,0,1), ar = 0.6, ma = 0.6), n = 100)
ts.plot(ts.sim)
ts.sim.AR2 <- arima.sim(list(order = c(2,0,0), ar = c(-0.8,0.3)))
ts.sim <- arima.sim(list(order = c(1,0,1), ar = 0.6, ma = 0.6), n = 100)
ts.plot(ts.sim)
ts.sim.AR2 <- arima.sim(list(order = c(2,0,0), ar = c(-0.8,0.3)),n = 100)
AR2simul <- function(phi1,phi2){
set.seed(1)
y <- ts(numeric(100))
e <- rnorm(100)
for(i in 2:100)
y[i] <- phi*y[i-1] + phi2*y[i-2] + e[i]
plot(y, main = paste("AR(2) of phi1 = ",phi," & phi2 = ",phi2), cex.main = 0.7)
}
AR2simul(-0.8,0.3)
AR2simul <- function(phi1,phi2){
set.seed(1)
y <- ts(numeric(100))
e <- rnorm(100)
for(i in 3:100)
y[i] <- phi*y[i-1] + phi2*y[i-2] + e[i]
plot(y, main = paste("AR(2) of phi1 = ",phi," & phi2 = ",phi2), cex.main = 0.7)
}
AR2simul(-0.8,0.3)
AR2simul <- function(phi1,phi2){
set.seed(1)
y <- ts(numeric(100))
e <- rnorm(100)
for(i in 3:100)
y[i] <- phi*y[i-1] + phi2*y[i-2] + e[i]
plot(y, main = paste("AR(2) of phi1 = ",phi1," & phi2 = ",phi2), cex.main = 0.7)
}
AR2simul(-0.8,0.3)
AR2simul(0.8,0.3)
AR2simul(0.1,0.3)
AR2simul(0.01,0.3)
AR2simul(0.01,0.03)
AR2simul(0.01,-0.0000001)
AR2simul(0.00000000001,-0.0000001)
AR2simul(-0.8,0.3)
AR2simul <- function(phi1,phi2){
set.seed(1)
y <- ts(numeric(100))
e <- rnorm(100)
for(i in 3:100)
y[i] <- phi*y[i-1] + phi2*y[i-2] + e[i]
plot(y, main = paste("AR(2) of phi1 = ",phi1," & phi2 = ",phi2), cex.main = 0.7)
}
AR2simul(-0.8,0.3)
par(mfror = c(2,1))
ts.plot(ts.sim)
AR2simul(-0.8,0.3)
par(mfror = c(2,1))
ts.plot(ts.sim)
test <- AR2simul(-0.8,0.3)
AR2simul <- function(phi1,phi2){
set.seed(1)
y <- ts(numeric(100))
e <- rnorm(100)
for(i in 3:100)
y[i] <- phi*y[i-1] + phi2*y[i-2] + e[i]
plot(y, main = paste("AR(2) of phi1 = ",phi1," & phi2 = ",phi2), cex.main = 0.7)
warning(call. = F)
}
test <- AR2simul(-0.8,0.3)
AR2simul <- function(phi1,phi2){
warning(call. = F)
set.seed(1)
y <- ts(numeric(100))
e <- rnorm(100)
for(i in 3:100)
y[i] <- phi*y[i-1] + phi2*y[i-2] + e[i]
plot(y, main = paste("AR(2) of phi1 = ",phi1," & phi2 = ",phi2), cex.main = 0.7)
}
test <- AR2simul(-0.8,0.3)
ts.sim <- arima.sim(list(order = c(1,0,1), ar = 0.6, ma = 0.6), n = 100)
AR2simul <- function(phi1,phi2){
set.seed(1)
y <- ts(numeric(100))
e <- rnorm(100)
for(i in 3:100)
y[i] <- phi*y[i-1] + phi2*y[i-2] + e[i]
plot(y, main = paste("AR(2) of phi1 = ",phi1," & phi2 = ",phi2), cex.main = 0.7)
}
par(mfror = c(2,1))
ts.plot(ts.sim)
test <- AR2simul(-0.8,0.3)
ts.sim <- arima.sim(list(order = c(1,0,1), ar = 0.6, ma = 0.6), n = 100)
AR2simul <- function(phi1,phi2){
set.seed(1)
y <- ts(numeric(100))
e <- rnorm(100)
for(i in 3:100)
y[i] <- phi*y[i-1] + phi2*y[i-2] + e[i]
plot(y, main = paste("AR(2) of phi1 = ",phi1," & phi2 = ",phi2), cex.main = 0.7)
}
par(mfror = c(2,1))
ts.plot(ts.sim)
AR2simul(-0.8,0.3)
data("wmurders")
autoplot(wmurders)
auto.arima(wmurders)
data("wmurders")
autoplot(wmurders)
auto.arima(wmurders)
Arima(wmurders,order = c(0,1,1))
Arima(wmurders,order = c(0,1,1))
auto.arima(wmurders)
Arima(wmurders,order = c(1,1,0))
Arima(wmurders,order = c(1,1,0))
auto.arima(wmurders)
data("wmurders")
autoplot(wmurders)
mdl1 <- Arima(wmurders,order = c(1,1,0))
mdl2 <- Arima(wmurders,order = c(0,1,1))
mdl3 <- Arima(wmurders,order = c(1,1,1))
checkresiduals(md1)
checkresiduals(mdl1)
mdl1 <- Arima(wmurders,order = c(1,1,0))
mdl2 <- Arima(wmurders,order = c(0,1,1))
mdl3 <- Arima(wmurders,order = c(1,1,1))
checkresiduals(mdl1)
checkresiduals(mdl2)
checkresiduals(mdl3)
purrr::reduce(.x = purrr::map(list(mdl1,mdl2,mdl3),.f = accuracy),.f = bind_rows)
purrr::map(list(mdl1,mdl2,mdl3),.f = accuracy)
purrr::reduce(.x = purrr::map(list(mdl1,mdl2,mdl3),.f = sw_glance),.f = bind_rows)
checkresiduals(mdl1)
checkresiduals(mdl2)
checkresiduals(mdl3)
head(wmurders)
plot(forecast(mdl3, h = 3))
mdl3$coef
lag(wmurders,1)
stats::lag(wmurders)
wmurders
stats::lag(wmurders)
x<-stats::lag(wmurders)
x
wmurders
xts::lag.xts(wmurders)
diffts <- diff(wmurders,1)
diffts
diffts*mdl3$coef[1]
diffts*mdl3$coef[1]
diffts*mdl3$coef[1][1]
mdl3$fitted
diffts*mdl3$coef[1]+mdl3$coef[2]
mdl3
diffts[1]*mdl3$coef[1]+mdl3$coef[2]*wmurders[2]- wmurders[1]
write.csv(wmurders)
write.csv(wmurders,file = "wmurders.csv")
mdl3$coef
mdl3
arimaauto <- auto.arima(wmurders)
arimaauto
accuracy(arimaauto)
checkresiduals(arimaauto)
arimaauto <- auto.arima(wmurders)
accuracy(arimaauto)
checkresiduals(arimaauto)
purrr::reduce(.x = purrr::map(list(mdl1,mdl2,mdl3),.f = sw_glance),.f = bind_rows)
data("austourists")
autoplot(austourists)
Acf(austourists)
pacf(austourists)
data("austourists")
autoplot(austourists)
Acf(austourists)
pacf(austourists)
austourists
par(mfrow = c(1,2))
Acf(austourists)
pacf(austourists)
data("austourists")
autoplot(austourists)
plot(forecast::nsdiffs(austourists, m = 4))
diff(austourists,nsdiffs(austourists))
plot(diff(austourists,nsdiffs(austourists)))
plot(diff(austourists,nsdiffs(austourists,4)))
auto.arima(austourists)
data("usmelec")
plot(forecast::ma(usmelec, 12))
plot(forecast::ma(usmelec, 12))
lines(usmelec,col = "grey")
plot(usmelec,col = "grey")
lines(forecast::ma(usmelec, 12))
lambda <- BoxCox.lambda(usmelec)
autoplot(BoxCox(usmelec,lambda))
seasonal(BoxCox(usmelec,lambda))
seasonplot(BoxCox(usmelec,lambda))
plot(diff(usmelec,nsdiffs(usmelec)))
plot(diff(usmelec,nsdiffs(usmelec)))
plot(diff(usmelec,nsdiffs(usmelectrans)))
usmelectrans <- BoxCox(usmelec,lambda)
plot(diff(usmelec,nsdiffs(usmelectrans)))
usmelectrans <- BoxCox(usmelec,lambda)
plot(diff(usmelec,nsdiffs(usmelectrans)))
usmelectrans <- BoxCox(usmelec,lambda)
plot(diff(usmelectrans,nsdiffs(usmelectrans)))
usmelectrans <- BoxCox(usmelec,lambda)
nsdiffs(usmelectrans)
nsdiffs(usmelectrans,12)
plot(diffs(usmelectrans,12))
plot(diff(usmelectrans,12))
auto.arima(usmelectrans)
Pacf(BoxCox(usmelec,lambda))
Acf(BoxCox(usmelec,lambda))
Pacf(BoxCox(usmelec,lambda))
ccf(BoxCox(usmelec,lambda))
ccf(y=BoxCox(usmelec,lambda))
Pa
Pacf(BoxCox(usmelec,lambda))
purrr::reduce(purrr::map(mdls2,.f = sw_glance),bind_rows)
fit1 <- Arima(usmelectrans, order = c(1,0,1), seasonal = c(1,0,1))
fit2 <- Arima(usmelectrans, order = c(2,1,1), seasonal = c(2,0,1))
fit3 <- auto.arima(usmelec)
mdls2 <- list(fit1,fit2,fit3)
purrr::reduce(purrr::map(mdls2,.f = sw_glance),bind_rows)
fit1 <- Arima(usmelectrans, order = c(1,0,1), seasonal = c(1,0,1))
fit2 <- Arima(usmelectrans, order = c(2,1,1), seasonal = c(2,0,1))
fit3 <- auto.arima(usmelectrans)
mdls2 <- list(fit1,fit2,fit3)
purrr::reduce(purrr::map(mdls2,.f = sw_glance),bind_rows)
checkresiduals(fit3)
plot(InvBoxCox(forecast(fit3, h = 180),lambda))
plot(as.numeric(InvBoxCox(forecast(fit3, h = 180),lambda))))
plot(as.numeric(InvBoxCox(forecast(fit3, h = 180),lambda)))
InvBoxCox(forecast(fit3, h = 180),lambda)
fcts <- forecast(fit3, h = 180)
fcts$fitted
fcts$mean
plot(fcts$mean)
knitr::opts_chunk$set(echo = TRUE)
library(magrittr)
library(dplyr)
library(forecast)
library(zoo)
library(ggplot2)
# Training data set
sales_train <- read.csv("./Midterm/sales_train_v2.csv", header = T, stringsAsFactors = F)
# Item categories
ItemCategories <- read.csv("./Midterm/item_categories.csv")
# Items
Items <- read.csv('./Midterm/items.csv')
# Aggregated data
Agg_sales_train <- sales_train %>%
dplyr::mutate(date = lubridate::parse_date_time(date,orders = "%d.%m.%Y")) %>%
dplyr::group_by(item_id,shop_id,date_block_num) %>%
dplyr::summarise(MonthlyCts = sum(item_cnt_day),Price = mean(item_price,na.rm = T)) %>%
dplyr::arrange(item_id,shop_id,date_block_num) %>%
dplyr::mutate(Item.Shop = item_id + shop_id / 100) %>%
dplyr::left_join(x = ., y = Items[,2:3])
# Reference frame
df <- data.frame(date_block_num = rep(seq(min(Agg_sales_train$date_block_num),max(Agg_sales_train$date_block_num)),n_distinct(Agg_sales_train$Item.Shop)),
Item.Shop = rep(unique(Agg_sales_train$Item.Shop),each = max(Agg_sales_train$date_block_num) - min(Agg_sales_train$date_block_num) + 1)
) %>%
tidyr::separate(.,2, c("item_id","shop_id"))%>%
dplyr::mutate(shop_id = ifelse(is.na(shop_id),0,shop_id)) %>%
dplyr::mutate(item_id = as.numeric(item_id),shop_id = as.numeric(shop_id))
# Monthly sales reference data frame includes shop id
MonthlySales.ItemShop <- df %>%
dplyr::left_join(.,Agg_sales_train[1:5]) %>%
dplyr::left_join(.,Items[2:3])
MonthlySales.Train <- MonthlySales.ItemShop %>%
dplyr::mutate(ItemShop = item_id + shop_id/100) %>%
dplyr::select(date_block_num,ItemShop,MonthlyCts, Price) %>%
#dplyr::mutate(MonthlyCts = ifelse(is.na(MonthlyCts),0,MonthlyCts)) %>%
dplyr::group_by(ItemShop,date_block_num) %>%
dplyr::summarise(Sales = sum(MonthlyCts,na.rm = T)) %>%
tidyr::spread(ItemShop,Sales)
# There are several variables that have very little data , what are they
NearZeroVars <- caret::nearZeroVar(MonthlySales.Train, names = F)
MonthlySalests <- as.ts(MonthlySales.Train[,c(1,NearZeroVars)*-1],frequency = 1, start = 0, end = 33)
# Summay by Item Category
MonthlySalebyCategory  <- MonthlySales.ItemShop %>% dplyr::group_by(date_block_num,item_category_id) %>%
dplyr::summarise(SaleCounts = sum(MonthlyCts,na.rm = T)) %>%
tidyr::spread(item_category_id, SaleCounts)
# How are categories related?
## remove categories that have zero variance
ZeroVars <- caret::nearZeroVar(MonthlySalebyCategory)
cormat <- cor(MonthlySalebyCategory[c(1,ZeroVars)*-1])
RetrieveItemStores <- function(data = MonthlySales.ItemShop, category) {
data %>%
filter(item_category_id %in% category) %>%
#dplyr::distinct(item_id,shop_id,item_category_id) %>%
dplyr::group_by(item_id,shop_id,item_category_id) %>%
dplyr::summarise(Datapoints = sum(!is.na(MonthlyCts))/nrow(.)) %>%
#dplyr::distinct(item_id,shop_id,keep.all = T) %>%
dplyr::ungroup() %>%
dplyr::mutate(Item.Shop = item_id + shop_id/100) %>%
dplyr::select(Item.Shop,item_category_id,Datapoints) %>%
dplyr::filter(Item.Shop %in% as.numeric(colnames(!!MonthlySales.Train)[NearZeroVars*-1])) %>%
dplyr::arrange(item_category_id,desc(Datapoints)) %>%
dplyr::mutate(item_id = as.integer(floor(Item.Shop)), shop_id = as.integer((Item.Shop - item_id)*100))
}
# Correlation plot
corrplot::corrplot(cormat,order = "hclust",tl.cex = 0.6)
library(reshape2)
HighCors <- subset(melt(cormat,varnames = c('CatA', 'CatB'), value.name = 'Correlations'), Correlations >= 0.8 & Correlations < 1)
HighCors[which(HighCors$CatA == 83),] %>% distinct(CatB)
testdf <- RetrieveItemStores(category = 2) %>% distinct(item_id)
HighCors[which(HighCors$CatA == 40),] %>% distinct(CatB)
Agg_sales_train %>% dplyr::filter(Item.Shop == 5037.5) %>% dplyr::select(MonthlyCts) %>% autoplot()
Agg_sales_train %>% dplyr::filter(Item.Shop == 5037.5) %>% dplyr::select(MonthlyCts) %>% lattice::xyplot(~MonthlyCts,.)
Agg_sales_train %>% dplyr::filter(Item.Shop == 5037.5) %>% dplyr::select(MonthlyCts) %>% lattice::xyplot(~MonthlyCts,.)
Agg_sales_train %>% dplyr::ungroup %>% dplyr::filter(Item.Shop == 5037.5) %>% dplyr::select(MonthlyCts) %>% lattice::xyplot(~MonthlyCts,.)
Agg_sales_train %>% dplyr::ungroup() %>% dplyr::filter(Item.Shop == 5037.5) %>% dplyr::select(MonthlyCts) %>% lattice::xyplot(~MonthlyCts,.)
Agg_sales_train %>% dplyr::ungroup() %>% dplyr::filter(Item.Shop == 5037.5) %>% dplyr::select(MonthlyCts)
Agg_sales_train %>% dplyr::ungroup() %>% dplyr::filter(Item.Shop == 5037.5) %>% dplyr::select(date_block_num,MonthlyCts)
Agg_sales_train %>% dplyr::ungroup() %>% dplyr::filter(Item.Shop == 5037.5) %>% dplyr::select(date_block_num,MonthlyCts) %>% ggplot(aes(x = date_block_num, y = MonthlyCts)) + geom_pom
Agg_sales_train %>% dplyr::ungroup() %>% dplyr::filter(Item.Shop == 5037.5) %>% dplyr::select(date_block_num,MonthlyCts) %>% ggplot(aes(x = date_block_num, y = MonthlyCts)) + geom_point()
Agg_sales_train %>% dplyr::ungroup() %>% dplyr::filter(Item.Shop == 5037.5) %>% dplyr::select(date_block_num,MonthlyCts) %>% ggplot(aes(x = date_block_num, y = MonthlyCts)) + geom_line()
Agg_sales_train %>% dplyr::ungroup() %>% dplyr::filter(item_id == 5037) %>% dplyr::group_by(date_block_num) %>% dplyr::summarise(Total = sum(MonthlyCts) %>% ggplot(aes(x = date_block_num, y = Total)) + geom_line()
Agg_sales_train %>% dplyr::ungroup() %>% dplyr::filter(item_id == 5037) %>% dplyr::group_by(date_block_num) %>% dplyr::summarise(Total = sum(MonthlyCts)) %>% ggplot(aes(x = date_block_num, y = Total)) + geom_line()
ItemsReference <- readxl::read_xlsx(path = ".\Midterm\LookUps.xlsb", sheet = "items-translated")
ItemsReference <- readxl::read_xlsx(path = "./Midterm/LookUps.xlsb", sheet = "items-translated")
ItemsReference <- readxl::read_xlsx(path = "./Midterm/LookUps.xlsx", sheet = "items-translated")
ItemsReference %<>% dplyr::mutate(Cinema = ifelse(stringr::str_detect(Category,"Cinema"),1,0),
Music = ifelse(stringr::str_detect(Category,"Music"),1,0),
Games = ifelse(stringr::str_detect(Category,"Games"),1,0),
Books = ifelse(stringr::str_detect(Category,"Books"),1,0),
Accesories = ifelse(stringr::str_detect(Category,"Accesories"),1,0),
Gifts = ifelse(stringr::str_detect(Category,"Gifts"),1,0),
Programs = ifelse(stringr::str_detect(Category,"Programs"),1,0),
Others = ifelse(rowSums(Cinema,Music,Games,Books,Accesories,Gifts,
Programs)==0,1,0)
)
ItemsReference %<>% dplyr::mutate(Cinema = ifelse(stringr::str_detect(Category,"Cinema"),1,0),
Music = ifelse(stringr::str_detect(Category,"Music"),1,0),
Games = ifelse(stringr::str_detect(Category,"Games"),1,0),
Books = ifelse(stringr::str_detect(Category,"Books"),1,0),
Accesories = ifelse(stringr::str_detect(Category,"Accesories"),1,0),
Gifts = ifelse(stringr::str_detect(Category,"Gifts"),1,0),
Programs = ifelse(stringr::str_detect(Category,"Programs"),1,0)
)
ItemsReference <- readxl::read_xlsx(path = "./Midterm/LookUps.xlsx", sheet = "items-translated")
ItemsReference %<>% dplyr::mutate(Cinema = ifelse(stringr::str_detect(Category,"Cinema"),1,0),
Music = ifelse(stringr::str_detect(Category,"Music"),1,0),
Games = ifelse(stringr::str_detect(Category,"Games"),1,0),
Books = ifelse(stringr::str_detect(Category,"Books"),1,0),
Accesories = ifelse(stringr::str_detect(Category,"Accesories"),1,0),
Gifts = ifelse(stringr::str_detect(Category,"Gifts"),1,0),
Programs = ifelse(stringr::str_detect(Category,"Programs"),1,0)
) %>%
dplyr::mutate(Others = ifelse(rowSums(Cinema, Music,Games,Books,Accesories,Gifts) < 1,1,0))
ItemsReference %<>% dplyr::mutate(Cinema = ifelse(stringr::str_detect(Category,"Cinema"),1,0),
Music = ifelse(stringr::str_detect(Category,"Music"),1,0),
Games = ifelse(stringr::str_detect(Category,"Games"),1,0),
Books = ifelse(stringr::str_detect(Category,"Books"),1,0),
Accesories = ifelse(stringr::str_detect(Category,"Accesories"),1,0),
Gifts = ifelse(stringr::str_detect(Category,"Gifts"),1,0),
Programs = ifelse(stringr::str_detect(Category,"Programs"),1,0)
) %>%
dplyr::mutate(Others = ifelse(rowSums(.[5:11]) < 1,1,0))
# Aggregated data
Agg_sales_train <- sales_train %>%
dplyr::mutate(date = lubridate::parse_date_time(date,orders = "%d.%m.%Y")) %>%
dplyr::group_by(item_id,shop_id,date_block_num) %>%
dplyr::summarise(MonthlyCts = sum(item_cnt_day),Price = mean(item_price,na.rm = T)) %>%
dplyr::arrange(item_id,shop_id,date_block_num) %>%
dplyr::mutate(Item.Shop = item_id + shop_id / 100) %>%
dplyr::left_join(x = ., y = Items[,2:3]) %>%
dplyr::left_join(x =., y = ItemsReference[,c(1,5:12)])
list = ls()
rm(list)
saveRDS(ls(), file = midterm.RData)
saveRDS(ls(), file = "midterm.RData")
